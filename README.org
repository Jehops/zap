* zap - Maintain ZFS snapshots with cron [1]

** Overview
   Run zap without arguments or visit https://github.com/Jehops/zap.
*** Key features
    - no configuration files
    - uses /namespaces/ to avoid collisions with other snapshots
    - creates and destroys snapshots only when it makes sense to [2][3]
    - written in POSIX sh

** Synopsis
   =$ zap TTL pool/filesystem ...=

   Create ZFS snapshots for the specified filesystems with the specified time to
   live (TTL).  TTL is of the form [0-9]{1,4}[dwmy].

   =$ zap -p TTL=

   Create ZFS snapshots with the specified TTL for filesystems with the property
   zap:snap set to "on".

   =$ zap -d=

   Destroy snapshots past expiration.

** Examples
   Create snapshots that will last for 1 day, 3 weeks, 6 months, and 1 year:

   =$ zap 1d zroot/ROOT/default=

   =$ zap 3w tank/backup zroot/usr/home/nox=

   =$ zap 6m zroot/usr/home/jrm zroot/usr/home/mem=

   =$ zap 1y tank/backup=

   Create the same snapshots for filesystems with the zap:snap property set to
   "on":

   =$ zap -p 1d=

   =$ zap -p 3w=

   =$ zap -p 6m=

   =$ zap -p 1y=

   Destroy snapshots past expiration:

   =$ zap -d=

*** Automatically create and destroy snapshots with cron
    =$ cat /etc/crontab=
#+BEGIN_SRC sh
SHELL=/bin/sh
PATH=/etc:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin

#minute	hour	mday	month	wday	who	command
# create specified snapshots
*/15	*	*	*	*	root	zap 1d zroot/ROOT/default zroot/usr/home/jrm
10	14	*	*	*	root	zap 1w zroot/ROOT/default zroot/usr/home/jrm
22	14	*	*	*	root	zap 1w zroot/ROOT/default zroot/usr/home/jrm
22	16	*	*	1	root	zap 1m zroot/ROOT/default zroot/usr/home/jrm

# or create snapshots based on the zap:snap property
*/15	*	*	*	*	root	zap -p 1d
10	14	*	*	*	root	zap -p 1w
22	14	*	*	*	root	zap -p 1w
22	16	*	*	1	root	zap -p 1m

# destroy snapshots
44	*/4	*	*	*	root	zap -d
#+END_SRC

** Authors and Contributors
   - Joseph Mingrone <jrm@ftfl.ca>
   - Tobias Kortkamp <t@tobik.me>
** License
   zap is relesed under a BSD 2-Clause License.  Refer to the header of each
   source file for details.

-----

[1] zap was influenced by zfSnap, which is under a BEER-WARE license.
We owe the author a beer.

[2] New snapshots are only created when a filesystem has changed since the last
snapshot.  If the filesystem hasn't changed, then the timestamp of the newest
snapshot is updated.

[3] If the pool is in a DEGRADED state, zap will not destroy snapshots.